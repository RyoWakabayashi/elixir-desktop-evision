#!/bin/bash
set -e

# Setting up the PATH environment
[ -s /opt/homebrew/bin/brew ] && eval $(/opt/homebrew/bin/brew shellenv)
[ -s /usr/local/bin/brew ] && eval $(/usr/local/bin/brew shellenv)

# This loads nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  

# This loads asdf
if [ -s "$HOMEBREW_PREFIX/opt/asdf/libexec/asdf.sh" ]; then 
  \. "$HOMEBREW_PREFIX/opt/asdf/libexec/asdf.sh" 
elif [ -s "$HOME/.asdf/asdf.sh" ]; then
  \. "$HOME/.asdf/asdf.sh"
fi


BASE=`pwd`
export MIX_ENV=prod
export MIX_TARGET=ios
export EVISION_PREFER_PRECOMPILED=false
export CODESIGN_ID=`security find-identity -v -p codesigning | sed -n 's/.*"\(.*\)".*/\1/p' | tail -n 1`

mix local.hex --force --if-missing
mix local.rebar --force --if-missing


cd ../../


asdf local erlang 26.2.5
asdf local elixir 1.17.2-otp-26


mix deps.get

#if [ ! -d "assets/node_modules" ]; then
#  cd assets && npm i && cd ..
#fi

if [ -f "$BASE/ElixirDesktopEvision/app.zip" ]; then
  rm "$BASE/ElixirDesktopEvision/app.zip"
fi

mix assets.deploy && \
  mix release --overwrite && \
  cd _build/ios_prod/rel/elixir_desktop_evision && \
  echo "CODESIGN_ID: ${CODESIGN_ID}" && \
  find . -name "*.so" -exec codesign -v --force --sign "${CODESIGN_ID}" {} \; && \
  zip -9qr "$BASE/ElixirDesktopEvision/app.zip" lib/ releases/
